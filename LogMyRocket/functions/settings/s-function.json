{
  "name": "settings",
  "runtime": "python2.7",
  "description": "Serverless Lambda function for project: LogMyRocket",
  "customName": false,
  "customRole": false,
  "handler": "functions/settings/handler.handler",
  "timeout": 6,
  "memorySize": 512,
  "authorizer": {},
  "custom": {
    "excludePatterns": [],
    "cors": {
      "allowOrigin": "https://www.logmyrocket.info",
      "allowHeaders": ["Content-Type", "X-Amz-Date", "Authorization", "X-Api-Key"],
      "allowCredentials": true
    }
  },
  "endpoints": [
    {
      "path": "settings",
      "method": "GET",
      "type": "AWS",
      "authorizationType": "none",
      "authorizerFunction": false,
      "apiKeyRequired": false,
      "requestParameters": {},
      "requestTemplates": "$${apiSettingsGetTemplate}",
      "responses": {
        "400": {
          "statusCode": "400"
        },
        "default": {
          "statusCode": "200",
          "responseParameters": {
            "method.response.header.Access-Control-Allow-Origin": "'https://www.logmyrocket.info'"
          },
          "responseModels": {
            "application/json;charset=UTF-8": "Empty"
          },
          "responseTemplates": {
            "application/json;charset=UTF-8": ""
          }
        }
      }
    },
    {
      "path": "settings",
      "method": "PUT",
      "type": "AWS",
      "authorizationType": "none",
      "authorizerFunction": false,
      "apiKeyRequired": false,
      "requestParameters": {},
      "requestTemplates": "$${apiSettingsPutTemplate}",
      "responses": {
        "400": {
          "statusCode": "400"
        },
        "default": {
          "statusCode": "200",
          "responseParameters": {
            "method.response.header.Access-Control-Allow-Origin": "'https://www.logmyrocket.info'"
          },
          "responseModels": {
            "application/json;charset=UTF-8": "Empty"
          },
          "responseTemplates": {
            "application/json;charset=UTF-8": ""
          }
        }
      }
    },
    {
      "path": "settings",
      "method": "OPTIONS",
      "type": "MOCK",
      "requestTemplates": "$${apiCorsRequestTemplate}",
      "responses": "$${apiCorsOptionsResponse}"
    }
  ],
  "events": [],
  "environment": {
    "SERVERLESS_PROJECT": "${project}",
    "SERVERLESS_STAGE": "${stage}",
    "SERVERLESS_REGION": "${region}"
  },
  "vpc": {
    "securityGroupIds": [],
    "subnetIds": []
  }
}